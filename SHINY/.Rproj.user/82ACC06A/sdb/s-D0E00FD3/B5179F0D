{
    "contents" : "library(shiny)\n\nsource(\"word_prediction.R\")\n### Function `predict_w4(input_text, ngram4.dt)`\n### predicts the next word from a trigram input.\n### arguments:  1) input_text, char;\n###             2) ngram4.dt,, data.table of 4grams and their frequencies.\n### 1) processes the input text,\n### 2) makes a data.table from the last 3 words of the input text,\n### 3) selects from an existing data.table of 4grams\n###     those that match the input trigram, and\n### 4) returns a list `tops` of the 4th words ordered by most frequent.\nload(\"tot.freqs_100_10w.RData\")\n### That loads the data.table of 4grams and frequencies\n### `tot.freqs`\n\nfix_apo <- function(word){\n    ## fix the apostrophe in contractions.\n    wordN <- ifelse(grepl(\"'\",word),gsub(\"'\", \"\\\\'\",word,fixed=T),word)\n    wordN\n}\n\nna2commons <- function(word){\n    ## `word` is a list of words.\n    commons <- c(\"the\", \"be\", \"to\", \"of\", \"and\", \"a\")\n    if(length(word)==1){\n        if(is.na(word) | grepl(\"^na$\",word, ignore.case=T))\n            word <- commons[round(runif(1,1,6),0)]\n    } else{\n        for(i in 1:length(word))\n            if(is.na(word[i]) | grepl(\"^na$\",word[i], ignore.case=T))\n                word[i] <- commons[i]\n    }\n    word\n}\n\ninsert_choice <- function(word, end_space){\n    ## amends the input text with the chosen word.\n    ## `text1` is the input text field (see file 'ui.R').\n    ## `end_space` is boolean, and is defined in the shinyServer function.\n    paste(\"$('#text1').val($('#text1').val() + '\",\n        ifelse(end_space, \"\",\" \"),\n        word, \" \", \"').trigger('change'); var input =\n        $('#text1'); input[0].selectionStart =\n        input[0].selectionEnd = input.val().length;\",\n        sep='')\n}\n\npredict<-function(intext,N=1,top=TRUE){\n    phrase <- \"\"\n    for(i in 1:N){\n        ifelse(top,\n               wordnext <- na2commons(predict_w4(intext,tot.freqs)[1]),\n               wordnext <- na2commons(predict_w4(intext,tot.freqs)[round(runif(1,1,3),0)])\n        )\n        phrase <- ifelse(phrase == \"\", wordnext, paste(phrase,wordnext))\n        intext <- paste(intext,phrase)\n    }\n    phrase\n}\n\nclear <- \"$('#text1').val('');\n        var input = $('#text1');\n        input[0].selectionStart = input[0].selectionEnd = input.val().length;\"\n\nshinyServer(\n    function(input, output, session) {\n\n        intext <- reactive({input$text1})\n        word <- reactive(predict_w4(intext(),tot.freqs)[1:3])\n        worda <- reactive( na2commons(word()) )\n        end_space <- reactive( grepl(\" $\", intext()) )\n        \n        output$topPanel <- renderUI({\n            tags$script(src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\")\n    \n            button1Click <- insert_choice(fix_apo(worda()[1]),end_space())\n            button2Click <- insert_choice(fix_apo(worda()[2]),end_space())\n            button3Click <- insert_choice(fix_apo(worda()[3]),end_space())\n\n            tags$div(\n                tags$button(type=\"button\", id=\"word1but\", worda()[1],\n                            class=\"btn action-button shiny-bound-input\",\n                            onclick=button1Click)\n                ,tags$button(type=\"button\", id=\"word2but\", worda()[2],\n                             class=\"btn action-button shiny-bound-input\",\n                             onclick=button2Click)\n                ,tags$button(type=\"button\", id=\"word3but\", worda()[3],\n                             class=\"btn action-button shiny-bound-input\",\n                             onclick=button3Click)\n            )\n\n        })\n        output$bottomPanel <- renderUI({\n            buttonRClick <- insert_choice(fix_apo(predict(intext(),\n                                input$num_bab,input$rand_bab)),end_space())\n            tags$div(\n                tags$button(type=\"button\", id=\"randombut\", \"Predict\",\n                             class=\"btn action-button shiny-bound-input\",\n                             onclick=buttonRClick)\n                ,tags$button(type=\"button\", id=\"clearbut\", \"Clear\",\n                             class=\"btn action-button shiny-bound-input\",\n                             onclick=clear)\n            )\n        })\n    }    \n)",
    "created" : 1461575718377.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3759813309",
    "id" : "B5179F0D",
    "lastKnownWriteTime" : 1461570321,
    "path" : "D:/Desktop/New folder/FINAL/SHINY/predict/server.R",
    "project_path" : "predict/server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}